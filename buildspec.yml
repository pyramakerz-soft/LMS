version: 0.2

phases:
  install:
    runtime-versions:
      php: 8.2
      nodejs: 18
    commands:
      - echo "Installing OS & PHP dependencies..."
      - dnf install -y php-zip php-mbstring php-xml php-cli unzip mariadb105
      - export HOME=/root
      - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

  pre_build:
    commands:
      - |
        echo "[Slack] Sending pre_build notification..."
        SLACK_WEBHOOK="https://hooks.slack.com/services/..."
        BUILD_ID=$CODEBUILD_BUILD_ID
        PROJECT_NAME=$CODEBUILD_PROJECT_NAME
        BRANCH=$(echo $CODEBUILD_WEBHOOK_HEAD_REF | awk -F/ '{print $NF}')
        COMMIT_ID=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c1-7)
        AUTHOR=$(git log -1 --pretty=format:'%an <%ae>' || echo "N/A")

        SLACK_MESSAGE="{
          \"text\": \":hourglass_flowing_sand: *Build Started* for *$PROJECT_NAME*\",
          \"blocks\": [
            {\"type\": \"section\", \"text\": {\"type\": \"mrkdwn\", \"text\": \":hourglass_flowing_sand: *Build Started!*\"}},
            {\"type\": \"section\", \"text\": {\"type\": \"mrkdwn\", \"text\": \"*Branch:* $BRANCH\\n*Commit:* $COMMIT_ID\\n*Author:* $AUTHOR\"}},
            {\"type\": \"section\", \"text\": {\"type\": \"mrkdwn\", \"text\": \"*Logs:* <https://$AWS_REGION.console.aws.amazon.com/codesuite/codebuild/projects/$PROJECT_NAME/build/$BUILD_ID/|View Logs>\"}}
          ]
        }"

        echo "$SLACK_MESSAGE" | curl -X POST -H 'Content-type: application/json' --data-binary @- "$SLACK_WEBHOOK"

      - echo "Installing Composer dependencies..."
      - composer require league/flysystem-aws-s3-v3 "^3.0" --with-all-dependencies || echo "Composer require failed" >> /tmp/error.log
      - composer install --no-interaction --prefer-dist --optimize-autoloader || echo "Composer install failed" >> /tmp/error.log
      - echo "Installing NPM packages..."
      - rm -rf public/build
      - npm install || echo "npm install failed" >> /tmp/error.log
      - php artisan config:clear
      - php artisan cache:clear
      - composer update || echo "Composer update failed" >> /tmp/error.log

  build:
    commands:
      - echo "Building front-end with Vite..."
      - npm run build || echo "Vite build failed" >> /tmp/error.log

  post_build:
    commands:
      - echo "[Slack] Preparing build notification..."
      - |
        START_TIME=$(date +%s)
        SLACK_WEBHOOK="https://hooks.slack.com/services/..."
        BUILD_ID=$CODEBUILD_BUILD_ID
        PROJECT_NAME=$CODEBUILD_PROJECT_NAME
        BRANCH=$(echo $CODEBUILD_WEBHOOK_HEAD_REF | awk -F/ '{print $NF}')
        COMMIT_ID=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c1-7)
        END_TIME=$(date +%s)
        CODEBUILD_START_TIME=${CODEBUILD_START_TIME:-$START_TIME}
        DURATION=$((END_TIME - CODEBUILD_START_TIME))
        STATUS="SUCCESS"

        if [ -f /tmp/error.log ]; then
          STATUS="FAILED"
          ERROR_LOG=$(cat /tmp/error.log | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')
        else
          ERROR_LOG="No errors detected."
        fi

        EB_ENV_NAME="your-env-name-here"
        EB_HEALTH=$(aws elasticbeanstalk describe-environment-health --environment-name "$EB_ENV_NAME" --attribute-names "Status" "Color" --query "Status" --output text 2>/dev/null || echo "Unknown")

        SLACK_MESSAGE="{
          \"text\": \":rocket: *$PROJECT_NAME* Build Notification\",
          \"blocks\": [
            {\"type\": \"section\", \"text\": {\"type\": \"mrkdwn\", \"text\": \"*Build Status:* :${STATUS,,}: *$STATUS*\"}},
            {\"type\": \"section\", \"text\": {\"type\": \"mrkdwn\", \"text\": \"*Branch:* $BRANCH\\n*Commit:* $COMMIT_ID\\n*Environment Health:* $EB_HEALTH\"}},
            {\"type\": \"section\", \"text\": {\"type\": \"mrkdwn\", \"text\": \"*Duration:* ${DURATION}s\"}},
            {\"type\": \"section\", \"text\": {\"type\": \"mrkdwn\", \"text\": \"*Logs:* <https://$AWS_REGION.console.aws.amazon.com/codesuite/codebuild/projects/$PROJECT_NAME/build/$BUILD_ID/|View Build Logs>\"}},
            {\"type\": \"section\", \"text\": {\"type\": \"mrkdwn\", \"text\": \"*Errors:*\\n\`\`\`$ERROR_LOG\`\`\`\"}}
          ]
        }"

        echo "$SLACK_MESSAGE" | curl -X POST -H 'Content-type: application/json' --data-binary @- "$SLACK_WEBHOOK"

artifacts:
  files:
    - '**/*'
    - public/build/**/*
    - .ebextensions/**/*
    - .platform/**/*
    - .env.prod
    - vendor/**
    - bootstrap/cache/**

proxy:
  upload-artifacts: yes
  logs: yes
