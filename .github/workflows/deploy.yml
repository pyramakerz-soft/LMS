      - name: Sync Files via SSH and Capture Metrics
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run: |
          set -e

          METRICS=$(sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -T -o StrictHostKeyChecking=no \
          -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd domains/pyramakerz-artifacts.com/public_html/LMS/lms_pyramakerz/

            echo "Starting deployment at $(date)..."

            git fetch origin main || exit 1
            git reset --hard origin/main || echo "Reset failed, trying pull..."
            git pull origin main || exit 1

            if [ -f "composer.phar" ]; then
              php composer.phar install --no-dev --prefer-dist --no-interaction --optimize-autoloader
            else
              composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader
            fi

            php artisan config:cache || echo "Config cache failed"
            php artisan route:cache || echo "Route cache failed"
            php artisan view:cache || echo "View cache failed"

            # Check for existing column before migration
            php artisan migrate --force || echo "Migrations failed"

            CPU=$(top -bn1 | grep "Cpu(s)" | awk '{print $2 + $4}')
            MEM=$(free -m | awk 'NR==2{printf "%.2f", $3*100/$2 }')
            DISK=$(df -h / | awk '$NF=="/"{printf "%d", $5}')

            echo "CPU=$CPU"
            echo "MEM=$MEM"
            echo "DISK=$DISK"
          EOF
          )

          echo "Captured Metrics: $METRICS"

          CPU=$(echo "$METRICS" | grep "CPU=" | cut -d'=' -f2)
          MEM=$(echo "$METRICS" | grep "MEM=" | cut -d'=' -f2)
          DISK=$(echo "$METRICS" | grep "DISK=" | cut -d'=' -f2)

          echo "Parsed CPU=$CPU, MEM=$MEM, DISK=$DISK"

          if [ -z "$CPU" ] || [ -z "$MEM" ] || [ -z "$DISK" ]; then
            echo "Failed to capture valid metrics"
            exit 1
          fi

          echo "CPU=$CPU" >> $GITHUB_ENV
          echo "MEM=$MEM" >> $GITHUB_ENV
          echo "DISK=$DISK" >> $GITHUB_ENV
